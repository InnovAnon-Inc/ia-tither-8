version: 2.1 # use CircleCI 2.0

orbs:
  deepcode: arrai/deepcode@1.1.0
  jira: circleci/jira@1.0.5
  slack: circleci/slack@4.2.0

workflows:
  my-workflow:
    jobs:
      - build:
          context:
            - default
          #post-steps:
          #  - jira/notify

jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:latest
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      #- run: git submodule sync
      #- run: git submodule update --init
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              make openssl tar gzip curl jq
      - run:
          name: FDO
          command: |
            rm -rf             var/cpuminer
            mkdir -pv          var/cpuminer
            #sysctl -w kernel.perf_event_paranoid=-1
            docker run -v $PWD/var/cpuminer/:/var/cpuminer/:rw innovanon/ia-tither-7
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --cache-from=ia-tither-8 \
              -t innovanon/ia-tither-8 \
              --build-arg TEST=1 .
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              #docker tag lfs-builder "InnovAnon-Inc/lfs-builder:${CIRCLE_SHA1}"
              #docker push           "InnovAnon-Inc/lfs-builder:${CIRCLE_SHA1}"
              docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
              docker push innovanon/ia-tither-8
            fi
#      - run:
#          name: Push upstream (whatever)
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              sleep 333
#              curl --location --request POST \
#                'https://circleci.com/api/v2/project/github/InnovAnon-Inc/whatever/pipeline' \
#                --header 'Content-Type: application/json' \
#                -u "${API_TOKEN}:"
#            fi
      - slack/notify:
          event: fail
          mentions: '@InnovAnon-Inc'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

